'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _argv = require("argv");

var _argv2 = _interopRequireDefault(_argv);

_argv2['default'].option({ name: 'config', short: 'c', type: 'string', description: 'config file' });

var options = _argv2['default'].run();
var PWD = process.cwd();

var config_file = options.options["config"] || "lambda.json";
var config = require(PWD + '/' + config_file);

exports.config = config;
var TMP_ZIP_PATH = "/tmp/hoge.zip";
exports.TMP_ZIP_PATH = TMP_ZIP_PATH;
var ENVIRONMENT = config.environment || "development";
exports.ENVIRONMENT = ENVIRONMENT;
var AWS_REGION = config.region || "ap-northeast-1";
exports.AWS_REGION = AWS_REGION;
var AWS_ACCESS_KEY_ID = config.aws_access_key_id || null;
exports.AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID;
var AWS_SECRET_ACCESS_KEY = config.aws_secret_access_key || null;
exports.AWS_SECRET_ACCESS_KEY = AWS_SECRET_ACCESS_KEY;
var BUCKET = config.bucket || null;
exports.BUCKET = BUCKET;
var FILE_KEY = config.file_key || null;
exports.FILE_KEY = FILE_KEY;
var FUNCTION_NAME = config.function_name || null;
exports.FUNCTION_NAME = FUNCTION_NAME;
var HANDLER = config.handler || "index.handler";
exports.HANDLER = HANDLER;
var ROLE_ARN = config.role_arn || null;
exports.ROLE_ARN = ROLE_ARN;
var MEMORY_SIZE = config.memory_size || 128;
exports.MEMORY_SIZE = MEMORY_SIZE;
var TIMEOUT = config.timeout || 3;
exports.TIMEOUT = TIMEOUT;
var TARGET = config.target || [];
exports.TARGET = TARGET;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcuZXM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7O0FBQ3ZCLGtCQUFLLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUcsUUFBUSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUcsQ0FBQyxDQUFBOztBQUV6RixJQUFJLE9BQU8sR0FBRyxrQkFBSyxHQUFHLEVBQUUsQ0FBQTtBQUN4QixJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUE7O0FBRXZCLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksYUFBYSxDQUFBO0FBQ3JELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLFdBQVcsQ0FBQyxDQUFDOztRQUExQyxNQUFNLEdBQU4sTUFBTTtBQUdWLElBQUksWUFBWSxHQUFHLGVBQWUsQ0FBQTtRQUE5QixZQUFZLEdBQVosWUFBWTtBQUNoQixJQUFJLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxJQUFJLGFBQWEsQ0FBQTtRQUFqRCxXQUFXLEdBQVgsV0FBVztBQUNmLElBQUksVUFBVSxHQUFHLE1BQU0sQ0FBQyxNQUFNLElBQUksZ0JBQWdCLENBQUE7UUFBOUMsVUFBVSxHQUFWLFVBQVU7QUFDZCxJQUFJLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUE7UUFBcEQsaUJBQWlCLEdBQWpCLGlCQUFpQjtBQUNyQixJQUFJLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsSUFBSSxJQUFJLENBQUE7UUFBNUQscUJBQXFCLEdBQXJCLHFCQUFxQjtBQUN6QixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQTtRQUE5QixNQUFNLEdBQU4sTUFBTTtBQUNWLElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFBO1FBQWxDLFFBQVEsR0FBUixRQUFRO0FBQ1osSUFBSSxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUE7UUFBNUMsYUFBYSxHQUFiLGFBQWE7QUFDakIsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sSUFBSSxlQUFlLENBQUE7UUFBM0MsT0FBTyxHQUFQLE9BQU87QUFDWCxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQTtRQUFsQyxRQUFRLEdBQVIsUUFBUTtBQUNaLElBQUksV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXLElBQUksR0FBRyxDQUFBO1FBQXZDLFdBQVcsR0FBWCxXQUFXO0FBQ2YsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUE7UUFBN0IsT0FBTyxHQUFQLE9BQU87QUFDWCxJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQTtRQUE1QixNQUFNLEdBQU4sTUFBTSIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXJndiBmcm9tIFwiYXJndlwiXG5hcmd2Lm9wdGlvbih7IG5hbWU6ICdjb25maWcnLCBzaG9ydDogJ2MnLCB0eXBlIDogJ3N0cmluZycsIGRlc2NyaXB0aW9uIDonY29uZmlnIGZpbGUnLCB9KVxuXG52YXIgb3B0aW9ucyA9IGFyZ3YucnVuKClcbnZhciBQV0QgPSBwcm9jZXNzLmN3ZCgpXG5cbnZhciBjb25maWdfZmlsZSA9IG9wdGlvbnMub3B0aW9uc1tcImNvbmZpZ1wiXSB8fCBcImxhbWJkYS5qc29uXCJcbmV4cG9ydCB2YXIgY29uZmlnID0gcmVxdWlyZShQV0QgKyAnLycgKyBjb25maWdfZmlsZSk7XG5cblxuZXhwb3J0IHZhciBUTVBfWklQX1BBVEggPSBcIi90bXAvaG9nZS56aXBcIlxuZXhwb3J0IHZhciBFTlZJUk9OTUVOVCA9IGNvbmZpZy5lbnZpcm9ubWVudCB8fCBcImRldmVsb3BtZW50XCJcbmV4cG9ydCB2YXIgQVdTX1JFR0lPTiA9IGNvbmZpZy5yZWdpb24gfHwgXCJhcC1ub3J0aGVhc3QtMVwiXG5leHBvcnQgdmFyIEFXU19BQ0NFU1NfS0VZX0lEID0gY29uZmlnLmF3c19hY2Nlc3Nfa2V5X2lkIHx8IG51bGxcbmV4cG9ydCB2YXIgQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZID0gY29uZmlnLmF3c19zZWNyZXRfYWNjZXNzX2tleSB8fCBudWxsXG5leHBvcnQgdmFyIEJVQ0tFVCA9IGNvbmZpZy5idWNrZXQgfHwgbnVsbFxuZXhwb3J0IHZhciBGSUxFX0tFWSA9IGNvbmZpZy5maWxlX2tleSB8fCBudWxsXG5leHBvcnQgdmFyIEZVTkNUSU9OX05BTUUgPSBjb25maWcuZnVuY3Rpb25fbmFtZSB8fCBudWxsXG5leHBvcnQgdmFyIEhBTkRMRVIgPSBjb25maWcuaGFuZGxlciB8fCBcImluZGV4LmhhbmRsZXJcIlxuZXhwb3J0IHZhciBST0xFX0FSTiA9IGNvbmZpZy5yb2xlX2FybiB8fCBudWxsXG5leHBvcnQgdmFyIE1FTU9SWV9TSVpFID0gY29uZmlnLm1lbW9yeV9zaXplIHx8IDEyOCBcbmV4cG9ydCB2YXIgVElNRU9VVCA9IGNvbmZpZy50aW1lb3V0IHx8IDNcbmV4cG9ydCB2YXIgVEFSR0VUID0gY29uZmlnLnRhcmdldCB8fCBbXVxuIl19